2024-08-30 13:42:36,448 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-08-30 13:42:36,448 - Setup: connection.py - INFO: Creating database engine and session objects
2024-08-30 13:42:36,481 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-08-30 13:42:38,199 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-08-30 13:42:38,199 - Setup: schema.py - INFO: Adding relationships to file table
2024-08-30 13:42:38,200 - Setup: schema.py - INFO: Adding relationships to project table
2024-08-30 13:42:38,200 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-08-30 13:42:38,222 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-08-30 13:42:38,332 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-08-30 13:42:38,333 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-08-30 13:42:38,333 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-08-30 13:42:38,333 - Setup: DatabaseMap.py - INFO: Building column map
2024-08-30 13:42:38,334 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-08-30 13:42:38,991 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-08-30 13:42:38,991 - Setup: connection.py - INFO: Creating database engine and session objects
2024-08-30 13:42:39,046 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-08-30 13:42:40,704 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-08-30 13:42:40,704 - Setup: schema.py - INFO: Adding relationships to file table
2024-08-30 13:42:40,705 - Setup: schema.py - INFO: Adding relationships to project table
2024-08-30 13:42:40,706 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-08-30 13:42:40,722 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-08-30 13:42:40,831 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-08-30 13:42:40,831 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-08-30 13:42:40,832 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-08-30 13:42:40,832 - Setup: DatabaseMap.py - INFO: Building column map
2024-08-30 13:42:40,833 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-08-30 13:42:51,390 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=64212)
2024-08-30 13:42:51,390 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: QNode: {"MATCH_ALL": ["therapeutic_agent is not null"], "MATCH_SOME": None, "ADD_COLUMNS": ["therapeutic_agent"], "EXCLUDE_COLUMNS": None}
2024-08-30 13:42:51,390 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-08-30 13:42:51,390 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: Building fetch_rows query
2024-08-30 13:42:51,390 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: Building MATCH conditions
2024-08-30 13:42:51,391 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: Building SELECT clause
2024-08-30 13:42:51,936 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: Query execution time: 0.5327117443084717s
2024-08-30 13:42:51,937 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: Returning 100 rows out of 2417 results | limit=100 & offset=0
2024-08-30 13:42:51,941 - 05f26ad8-cc1a-4adf-b73b-f94bdb5df144 - INFO: Success
2024-08-30 13:44:30,104 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=64224)
2024-08-30 13:44:30,104 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: QNode: {"MATCH_ALL": ["therapeutic_agent like b%", "sex like f*"], "MATCH_SOME": ["therapeutic_agent = Pomalidomide", "format = bam"], "ADD_COLUMNS": ["hotspot", "morphology", "therapeutic_agent", "format", "sex"], "EXCLUDE_COLUMNS": ["subject_id", "year_of_death"]}
2024-08-30 13:44:30,104 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-08-30 13:44:30,104 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: Building fetch_rows query
2024-08-30 13:44:30,104 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: Building MATCH conditions
2024-08-30 13:44:30,107 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: Building SELECT clause
2024-08-30 13:44:30,377 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: Query execution time: 0.23173022270202637s
2024-08-30 13:44:30,377 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: Returning 0 rows out of 0 results | limit=100 & offset=0
2024-08-30 13:44:30,382 - 15197c38-ed22-44b1-bf1b-3e566573e0c7 - INFO: Success
2024-08-30 13:47:24,434 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-08-30 13:47:24,434 - Setup: connection.py - INFO: Creating database engine and session objects
2024-08-30 13:47:24,480 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-08-30 13:47:26,098 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-08-30 13:47:26,098 - Setup: schema.py - INFO: Adding relationships to file table
2024-08-30 13:47:26,099 - Setup: schema.py - INFO: Adding relationships to project table
2024-08-30 13:47:26,099 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-08-30 13:47:26,110 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-08-30 13:47:26,219 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-08-30 13:47:26,219 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-08-30 13:47:26,219 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-08-30 13:47:26,219 - Setup: DatabaseMap.py - INFO: Building column map
2024-08-30 13:47:26,219 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-08-30 13:47:26,884 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-08-30 13:47:26,884 - Setup: connection.py - INFO: Creating database engine and session objects
2024-08-30 13:47:26,974 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-08-30 13:47:28,813 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-08-30 13:47:28,814 - Setup: schema.py - INFO: Adding relationships to file table
2024-08-30 13:47:28,815 - Setup: schema.py - INFO: Adding relationships to project table
2024-08-30 13:47:28,816 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-08-30 13:47:28,854 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-08-30 13:47:28,967 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-08-30 13:47:28,967 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-08-30 13:47:28,967 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-08-30 13:47:28,967 - Setup: DatabaseMap.py - INFO: Building column map
2024-08-30 13:47:28,969 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-08-30 13:47:29,156 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: data/subject endpoint hit: Address(host='testclient', port=50000)
2024-08-30 13:47:29,156 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 0"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-08-30 13:47:29,157 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: http://testserver/data/subject
2024-08-30 13:47:29,157 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: Building fetch_rows query
2024-08-30 13:47:29,157 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: Building MATCH conditions
2024-08-30 13:47:29,158 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: Building SELECT clause
2024-08-30 13:47:29,672 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: Query execution time: 0.48662400245666504s
2024-08-30 13:47:29,673 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: Returning 0 rows out of 0 results | limit=100 & offset=0
2024-08-30 13:47:29,680 - 58bd7b37-d3b2-4702-81e5-cda0e46b8b50 - INFO: Success
2024-09-04 12:28:08,750 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-04 12:28:08,750 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-04 12:28:09,043 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-04 12:28:10,755 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-04 12:28:10,756 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-04 12:28:10,756 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-04 12:28:10,757 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-04 12:28:10,797 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-04 12:28:10,907 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-04 12:28:10,907 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-04 12:28:10,908 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-04 12:28:10,908 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-04 12:28:10,909 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-04 12:28:12,057 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-04 12:28:12,057 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-04 12:28:12,105 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-04 12:28:13,802 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-04 12:28:13,802 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-04 12:28:13,803 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-04 12:28:13,803 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-04 12:28:13,830 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-04 12:28:13,943 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-04 12:28:13,943 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-04 12:28:13,944 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-04 12:28:13,944 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-04 12:28:13,945 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:26:34,250 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:26:34,250 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:26:34,754 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:26:36,470 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:26:36,470 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:26:36,471 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:26:36,472 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:26:36,526 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:26:36,639 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:26:36,639 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:26:36,639 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:26:36,639 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:26:36,641 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:26:40,413 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:26:40,413 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:26:40,571 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:26:42,263 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:26:42,263 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:26:42,263 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:26:42,263 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:26:42,292 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:26:42,402 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:26:42,402 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:26:42,402 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:26:42,403 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:26:42,403 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:27:27,320 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:27:27,320 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:27:27,353 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:27:28,662 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:27:28,663 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:27:28,713 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:27:29,045 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:27:29,045 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:27:29,046 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:27:29,046 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:27:29,064 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:27:29,172 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:27:29,172 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:27:29,172 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:27:29,172 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:27:29,173 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:27:30,419 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:27:30,419 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:27:30,420 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:27:30,420 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:27:30,428 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:27:30,537 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:27:30,537 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:27:30,537 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:27:30,537 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:27:30,538 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:28:12,310 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=50885)
2024-09-05 08:28:12,311 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: QNode: {"MATCH_ALL": ["sex like f%"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-09-05 08:28:12,311 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-09-05 08:28:12,311 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: Building fetch_rows query
2024-09-05 08:28:12,311 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: Building MATCH conditions
2024-09-05 08:28:12,312 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: Building SELECT clause
2024-09-05 08:28:13,111 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: Query execution time: 0.7828059196472168s
2024-09-05 08:28:13,112 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: Returning 100 rows out of 34388 results | limit=100 & offset=0
2024-09-05 08:28:13,115 - c63788a8-f0b5-4cee-b3d7-29eba6e21077 - INFO: Success
2024-09-05 08:28:54,447 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:28:54,447 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:28:54,447 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:28:54,447 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:28:54,573 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:28:54,573 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:28:56,111 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:28:56,111 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:28:56,111 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:28:56,112 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:28:56,151 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:28:56,238 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:28:56,239 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:28:56,239 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:28:56,239 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:28:56,247 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:28:56,247 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:28:56,248 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:28:56,248 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:28:56,248 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:28:56,257 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:28:56,368 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:28:56,368 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:28:56,368 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:28:56,368 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:28:56,369 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:34:02,209 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:34:02,209 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:34:02,242 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:34:02,242 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:34:02,260 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:34:02,299 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:34:03,812 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:34:03,812 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:34:03,813 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:34:03,813 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:34:03,835 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:34:03,932 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:34:03,933 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:34:03,933 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:34:03,933 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:34:03,933 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:34:03,933 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:34:03,934 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:34:03,934 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:34:03,935 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:34:03,948 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:34:04,054 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:34:04,054 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:34:04,054 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:34:04,054 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:34:04,055 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:35:02,408 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:35:02,408 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:35:02,439 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:35:02,439 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:35:02,440 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:35:02,488 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:35:03,938 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:35:03,938 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:35:03,939 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:35:03,939 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:35:03,958 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:35:04,054 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:35:04,055 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:35:04,055 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:35:04,055 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:35:04,055 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:35:04,157 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:35:04,157 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:35:04,157 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:35:04,157 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:35:04,170 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:35:04,278 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:35:04,279 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:35:04,279 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:35:04,279 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:35:04,279 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:35:25,698 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:35:25,699 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:35:25,732 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:35:25,732 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:35:25,733 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:35:25,779 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:35:27,279 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:35:27,279 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:35:27,279 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:35:27,280 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:35:27,291 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:35:27,383 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:35:27,383 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:35:27,384 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:35:27,384 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:35:27,388 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:35:27,388 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:35:27,388 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:35:27,388 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:35:27,389 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:35:27,402 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:35:27,508 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:35:27,508 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:35:27,508 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:35:27,508 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:35:27,508 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:38:59,353 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:38:59,354 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:38:59,577 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:39:01,256 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:39:01,256 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:39:01,257 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:39:01,258 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:39:01,281 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:39:01,389 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:39:01,390 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:39:01,390 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:39:01,390 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:39:01,391 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:39:02,286 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 08:39:02,286 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 08:39:02,338 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 08:39:03,984 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 08:39:03,984 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 08:39:03,985 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 08:39:03,985 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 08:39:03,999 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 08:39:04,107 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 08:39:04,107 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 08:39:04,107 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 08:39:04,107 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 08:39:04,108 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-09-05 08:39:06,848 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=51119)
2024-09-05 08:39:06,848 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: QNode: {"MATCH_ALL": ["sex like f%"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-09-05 08:39:06,848 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-09-05 08:39:06,848 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: Building fetch_rows query
2024-09-05 08:39:06,848 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: Building MATCH conditions
2024-09-05 08:39:06,849 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: Building SELECT clause
2024-09-05 08:39:07,628 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: Query execution time: 0.7666566371917725s
2024-09-05 08:39:07,629 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: Returning 100 rows out of 34388 results | limit=100 & offset=0
2024-09-05 08:39:07,632 - d85529b7-6b2d-4923-b2e2-dfa19e6365bf - INFO: Success
2024-09-05 13:10:13,091 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-09-05 13:10:13,091 - Setup: connection.py - INFO: Creating database engine and session objects
2024-09-05 13:10:13,557 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-09-05 13:10:15,259 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-09-05 13:10:15,260 - Setup: schema.py - INFO: Adding relationships to file table
2024-09-05 13:10:15,260 - Setup: schema.py - INFO: Adding relationships to project table
2024-09-05 13:10:15,261 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-09-05 13:10:15,305 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-09-05 13:10:15,414 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-09-05 13:10:15,415 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-09-05 13:10:15,415 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-09-05 13:10:15,415 - Setup: DatabaseMap.py - INFO: Building column map
2024-09-05 13:10:15,416 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:43:39,691 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:43:39,691 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:43:39,691 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:43:39,726 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:43:41,359 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:43:41,359 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:43:41,359 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:43:41,361 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:43:41,361 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:43:41,393 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:43:41,502 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:43:41,502 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:43:41,502 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:43:41,502 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:43:41,503 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:43:42,103 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:43:42,103 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:43:42,152 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:43:43,772 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:43:43,772 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:43:43,773 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:43:43,773 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:43:43,773 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:43:43,795 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:43:43,905 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:43:43,905 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:43:43,905 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:43:43,905 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:43:43,906 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:43:56,296 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: data/file endpoint hit: Address(host='127.0.0.1', port=62911)
2024-10-08 07:43:56,296 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: QNode: {"MATCH_ALL": ["file_id_alias = 0"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 07:43:56,297 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: http://127.0.0.1:8000/data/file?limit=100&offset=0
2024-10-08 07:43:56,297 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: Building fetch_rows query
2024-10-08 07:43:56,297 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: Building MATCH conditions
2024-10-08 07:43:56,297 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: Building SELECT clause
2024-10-08 07:43:56,730 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: Query execution time: 0.41947007179260254s
2024-10-08 07:43:56,730 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: Returning 1 rows out of 1 results | limit=100 & offset=0
2024-10-08 07:43:56,731 - Query: 129c54c8-31f4-48fe-b4ea-588ce5374be7 - INFO: Success
2024-10-08 07:44:05,784 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: data/file endpoint hit: Address(host='127.0.0.1', port=62917)
2024-10-08 07:44:05,784 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: QNode: {"MATCH_ALL": ["file_id_alias = 0"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 07:44:05,784 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: http://127.0.0.1:8000/data/file?limit=100&offset=0
2024-10-08 07:44:05,785 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: Building fetch_rows query
2024-10-08 07:44:05,785 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: Building MATCH conditions
2024-10-08 07:44:05,785 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: Building SELECT clause
2024-10-08 07:44:05,919 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: Query execution time: 0.12861204147338867s
2024-10-08 07:44:05,919 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: Returning 1 rows out of 1 results | limit=100 & offset=0
2024-10-08 07:44:05,920 - Query: da11ffb1-9cfd-4bdd-9915-f52d0bb54cde - INFO: Success
2024-10-08 07:46:59,116 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:46:59,117 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:46:59,118 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:46:59,153 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:47:00,753 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:47:00,754 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:47:00,755 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:47:00,756 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:47:00,756 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:47:00,776 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:47:00,918 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:47:00,918 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:47:00,919 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:47:00,919 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:47:00,920 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:47:12,697 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:47:12,698 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:47:12,699 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:47:12,737 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:47:14,343 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:47:14,343 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:47:14,345 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:47:14,345 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:47:14,346 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:47:14,362 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:47:14,500 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:47:14,501 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:47:14,502 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:47:14,502 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:47:14,504 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:54:51,443 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:54:51,447 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:54:51,447 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:54:51,615 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:54:53,218 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:54:53,218 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:54:53,219 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:54:53,219 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:54:53,219 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:54:53,258 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:54:53,371 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:54:53,371 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:54:53,372 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:54:53,372 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:54:53,374 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:55:38,908 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:55:38,909 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:55:38,909 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:55:38,963 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:55:40,574 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:55:40,574 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:55:40,575 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:55:40,575 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:55:40,575 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:55:40,598 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:55:40,711 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:55:40,712 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:55:40,712 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:55:40,713 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:55:40,714 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:56:09,742 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:56:09,743 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:56:09,744 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:56:09,900 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:56:11,424 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:56:11,424 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:56:11,425 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:56:11,425 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:56:11,425 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:56:11,442 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:56:11,541 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:56:11,541 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:56:11,542 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:56:11,542 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:56:11,543 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:56:12,431 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:56:12,431 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:56:12,486 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:56:14,143 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:56:14,143 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:56:14,144 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:56:14,144 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:56:14,144 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:56:14,166 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:56:14,276 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:56:14,276 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:56:14,276 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:56:14,276 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:56:14,277 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:56:16,941 - Query: 1424e1ad-ae61-459f-957f-301b943c9d3e - INFO: summary/file endpoint hit: Address(host='127.0.0.1', port=63199)
2024-10-08 07:56:16,941 - Query: 1424e1ad-ae61-459f-957f-301b943c9d3e - INFO: QNode: {"MATCH_ALL": ["file_id_alias <= 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 07:56:16,941 - Query: 1424e1ad-ae61-459f-957f-301b943c9d3e - INFO: http://127.0.0.1:8000/summary/file
2024-10-08 07:56:16,941 - Query: 1424e1ad-ae61-459f-957f-301b943c9d3e - INFO: Building summary query
2024-10-08 07:56:16,941 - Query: 1424e1ad-ae61-459f-957f-301b943c9d3e - INFO: Building MATCH conditions
2024-10-08 07:56:16,948 - Query: 1424e1ad-ae61-459f-957f-301b943c9d3e - ERROR: Query contains no columns with which to SELECT from.
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 75, in file_summary_endpoint
    result = summary_query(db, endpoint_tablename='file', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 164, in summary_query
    log.debug(f'Query:\n{"-"*60}\n{query_to_string(query)}\n{"-"*60}')
                                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 11, in query_to_string
    sql_string = str(q.statement.compile(compile_kwargs={"literal_binds": True}, dialect=postgresql.dialect()))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 308, in compile
    return self._compiler(dialect, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 316, in _compiler
    return dialect.statement_compiler(dialect, self, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 1429, in __init__
    Compiled.__init__(self, dialect, statement, **kwargs)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 870, in __init__
    self.string = self.process(self.statement, **compile_kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 915, in process
    return obj._compiler_dispatch(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4764, in visit_select
    for c in [
             ^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4765, in <listcomp>
    self._label_select_column(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4590, in _label_select_column
    return result_expr._compiler_dispatch(self, **column_clause_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2549, in visit_label
    label.element._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2419, in visit_grouping
    return "(" + grouping.element._compiler_dispatch(self, **kwargs) + ")"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4679, in visit_select
    compile_state = select_stmt._compile_state_factory(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 683, in create_for_statement
    return klass.create_for_statement(statement, compiler, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 1168, in create_for_statement
    self._setup_for_generate()
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 1298, in _setup_for_generate
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query contains no columns with which to SELECT from.
2024-10-08 07:58:05,134 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:58:05,134 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:05,134 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:05,149 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:05,149 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:05,190 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:05,209 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:06,647 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:06,647 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:06,647 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:06,648 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:06,648 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:06,670 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:06,770 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:06,770 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:06,770 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:06,770 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:06,771 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:06,803 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:06,804 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:06,804 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:06,804 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:06,804 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:06,828 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:06,936 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:06,936 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:06,936 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:06,936 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:06,937 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:12,579 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:58:12,580 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:12,580 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:12,606 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:12,607 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:12,642 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:12,660 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:14,128 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:14,128 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:14,128 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:14,128 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:14,128 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:14,128 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:14,129 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:14,129 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:14,129 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:14,129 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:14,155 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:14,163 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:14,254 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:14,254 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:14,254 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:14,254 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:14,255 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:14,261 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:14,261 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:14,262 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:14,262 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:14,262 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:34,690 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:58:34,691 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:34,691 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:34,717 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:34,717 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:34,744 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:34,766 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:36,378 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:36,378 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:36,379 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:36,379 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:36,379 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:36,379 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:36,379 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:36,380 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:36,380 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:36,380 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:36,398 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:36,406 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:36,508 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:36,508 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:36,508 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:36,508 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:36,509 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:36,516 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:36,517 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:36,517 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:36,517 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:36,518 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:40,648 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:58:40,649 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:40,649 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:40,682 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:42,208 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:42,208 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:42,208 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:42,209 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:42,209 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:42,228 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:42,329 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:42,329 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:42,329 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:42,329 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:42,330 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:42,952 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:42,952 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:43,004 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:44,634 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:44,634 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:44,635 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:44,636 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:44,636 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:44,657 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:44,766 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:44,767 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:44,767 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:44,767 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:44,768 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:44,930 - Query: 71bbc544-bfec-4c37-bd8f-e7df7c823266 - INFO: summary/file endpoint hit: Address(host='127.0.0.1', port=63242)
2024-10-08 07:58:44,931 - Query: 71bbc544-bfec-4c37-bd8f-e7df7c823266 - INFO: QNode: {"MATCH_ALL": ["file_id_alias <= 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 07:58:44,931 - Query: 71bbc544-bfec-4c37-bd8f-e7df7c823266 - INFO: http://127.0.0.1:8000/summary/file
2024-10-08 07:58:44,931 - Query: 71bbc544-bfec-4c37-bd8f-e7df7c823266 - INFO: Building summary query
2024-10-08 07:58:44,931 - Query: 71bbc544-bfec-4c37-bd8f-e7df7c823266 - INFO: Building MATCH conditions
2024-10-08 07:58:44,940 - Query: 71bbc544-bfec-4c37-bd8f-e7df7c823266 - ERROR: Query contains no columns with which to SELECT from.
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 75, in file_summary_endpoint
    result = summary_query(db, endpoint_tablename='file', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 168, in summary_query
    log.debug(f'Query:\n{"-"*60}\n{query_to_string(query)}\n{"-"*60}')
                                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 11, in query_to_string
    sql_string = str(q.statement.compile(compile_kwargs={"literal_binds": True}, dialect=postgresql.dialect()))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 308, in compile
    return self._compiler(dialect, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 316, in _compiler
    return dialect.statement_compiler(dialect, self, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 1429, in __init__
    Compiled.__init__(self, dialect, statement, **kwargs)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 870, in __init__
    self.string = self.process(self.statement, **compile_kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 915, in process
    return obj._compiler_dispatch(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4764, in visit_select
    for c in [
             ^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4765, in <listcomp>
    self._label_select_column(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4590, in _label_select_column
    return result_expr._compiler_dispatch(self, **column_clause_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2549, in visit_label
    label.element._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2419, in visit_grouping
    return "(" + grouping.element._compiler_dispatch(self, **kwargs) + ")"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4679, in visit_select
    compile_state = select_stmt._compile_state_factory(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 683, in create_for_statement
    return klass.create_for_statement(statement, compiler, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 1168, in create_for_statement
    self._setup_for_generate()
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 1298, in _setup_for_generate
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query contains no columns with which to SELECT from.
2024-10-08 07:58:47,636 - Query: 64cc084f-16ea-4aa4-a701-046dde2c4945 - INFO: summary/file endpoint hit: Address(host='127.0.0.1', port=63242)
2024-10-08 07:58:47,636 - Query: 64cc084f-16ea-4aa4-a701-046dde2c4945 - INFO: QNode: {"MATCH_ALL": ["file_id_alias <= 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 07:58:47,636 - Query: 64cc084f-16ea-4aa4-a701-046dde2c4945 - INFO: http://127.0.0.1:8000/summary/file
2024-10-08 07:58:47,636 - Query: 64cc084f-16ea-4aa4-a701-046dde2c4945 - INFO: Building summary query
2024-10-08 07:58:47,636 - Query: 64cc084f-16ea-4aa4-a701-046dde2c4945 - INFO: Building MATCH conditions
2024-10-08 07:58:47,645 - Query: 64cc084f-16ea-4aa4-a701-046dde2c4945 - ERROR: Query contains no columns with which to SELECT from.
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 75, in file_summary_endpoint
    result = summary_query(db, endpoint_tablename='file', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 168, in summary_query
    log.debug(f'Query:\n{"-"*60}\n{query_to_string(query)}\n{"-"*60}')
                                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 11, in query_to_string
    sql_string = str(q.statement.compile(compile_kwargs={"literal_binds": True}, dialect=postgresql.dialect()))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 308, in compile
    return self._compiler(dialect, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 316, in _compiler
    return dialect.statement_compiler(dialect, self, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 1429, in __init__
    Compiled.__init__(self, dialect, statement, **kwargs)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 870, in __init__
    self.string = self.process(self.statement, **compile_kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 915, in process
    return obj._compiler_dispatch(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4764, in visit_select
    for c in [
             ^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4765, in <listcomp>
    self._label_select_column(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4590, in _label_select_column
    return result_expr._compiler_dispatch(self, **column_clause_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2549, in visit_label
    label.element._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2419, in visit_grouping
    return "(" + grouping.element._compiler_dispatch(self, **kwargs) + ")"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4679, in visit_select
    compile_state = select_stmt._compile_state_factory(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 683, in create_for_statement
    return klass.create_for_statement(statement, compiler, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 1168, in create_for_statement
    self._setup_for_generate()
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 1298, in _setup_for_generate
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query contains no columns with which to SELECT from.
2024-10-08 07:58:57,135 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:57,135 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:57,152 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:58:57,152 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:58:57,152 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:58:57,192 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:57,212 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:58:58,666 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:58,666 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:58,666 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:58,667 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:58,667 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:58,690 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:58,790 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:58,790 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:58,791 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:58,791 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:58,794 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:58:58,801 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:58:58,801 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:58:58,801 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:58:58,802 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:58:58,802 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:58:58,817 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:58:58,924 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:58:58,924 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:58:58,924 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:58:58,924 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:58:58,925 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:59:02,089 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: summary/file endpoint hit: Address(host='127.0.0.1', port=63249)
2024-10-08 07:59:02,090 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: QNode: {"MATCH_ALL": ["file_id_alias <= 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 07:59:02,090 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: http://127.0.0.1:8000/summary/file
2024-10-08 07:59:02,090 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: Building summary query
2024-10-08 07:59:02,090 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: Building MATCH conditions
2024-10-08 07:59:02,544 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: Query execution time: 0.44455504417419434s
2024-10-08 07:59:02,548 - Query: 54b48c91-fd1b-4189-8500-d6aeb9f30017 - INFO: Success
2024-10-08 07:59:27,375 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 07:59:27,376 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:59:27,376 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:59:27,390 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 07:59:27,391 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 07:59:27,428 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:59:27,447 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 07:59:28,899 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:59:28,899 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:59:28,900 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:59:28,900 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:59:28,901 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:59:28,931 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:59:29,028 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:59:29,028 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:59:29,028 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:59:29,028 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:59:29,029 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 07:59:29,049 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 07:59:29,049 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 07:59:29,050 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 07:59:29,050 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 07:59:29,050 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 07:59:29,071 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 07:59:29,181 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 07:59:29,181 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 07:59:29,181 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 07:59:29,181 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 07:59:29,182 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 08:33:29,443 -  - INFO: Building summary query
2024-10-08 08:33:29,445 -  - INFO: Building MATCH conditions
2024-10-08 08:34:01,044 -  - INFO: Building summary query
2024-10-08 08:34:01,046 -  - INFO: Building MATCH conditions
2024-10-08 09:02:49,280 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=63961)
2024-10-08 09:02:49,280 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-08 09:02:49,280 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-08 09:02:49,280 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: Building summary query
2024-10-08 09:02:49,280 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: Building MATCH conditions
2024-10-08 09:02:52,386 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: Query execution time: 3.095891237258911s
2024-10-08 09:02:52,395 - Query: 87119395-daed-4ca9-9483-f655f4c18c98 - INFO: Success
2024-10-08 09:04:01,525 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=63972)
2024-10-08 09:04:01,525 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-08 09:04:01,525 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-10-08 09:04:01,525 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: Building fetch_rows query
2024-10-08 09:04:01,525 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: Building MATCH conditions
2024-10-08 09:04:01,526 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: Building SELECT clause
2024-10-08 09:04:02,694 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: Query execution time: 1.1534228324890137s
2024-10-08 09:04:02,695 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: Returning 100 rows out of 63172 results | limit=100 & offset=0
2024-10-08 09:04:02,697 - Query: f95e50c5-33e5-43e6-a42e-bd98f2c908e0 - INFO: Success
2024-10-08 10:35:13,249 - Query: b7e326be-286c-47de-9771-b44e416d34fe - INFO: unique_values endpoint hit: Address(host='127.0.0.1', port=64720)
2024-10-08 10:35:13,249 - Query: b7e326be-286c-47de-9771-b44e416d34fe - INFO: http://127.0.0.1:8000/unique_values/sex?count=false&totalCount=false
2024-10-08 10:35:13,250 - Query: b7e326be-286c-47de-9771-b44e416d34fe - INFO: Building unique_values query
2024-10-08 10:35:13,453 - Query: b7e326be-286c-47de-9771-b44e416d34fe - INFO: Query execution time: 0.2004070281982422s
2024-10-08 10:35:13,454 - Query: b7e326be-286c-47de-9771-b44e416d34fe - INFO: Returning 13 rows out of 13 results | limit=None & offset=None
2024-10-08 10:44:10,660 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=64785)
2024-10-08 10:44:10,661 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-08 10:44:10,661 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-10-08 10:44:10,661 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: Building fetch_rows query
2024-10-08 10:44:10,661 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: Building MATCH conditions
2024-10-08 10:44:10,661 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: Building SELECT clause
2024-10-08 10:44:11,774 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: Query execution time: 1.0990757942199707s
2024-10-08 10:44:11,774 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: Returning 100 rows out of 63172 results | limit=100 & offset=0
2024-10-08 10:44:11,776 - Query: ee3099ed-2f04-40f9-b42c-44bcc0ca384a - INFO: Success
2024-10-08 10:50:23,437 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=64835)
2024-10-08 10:50:23,437 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": ["sex"], "EXCLUDE_COLUMNS": None}
2024-10-08 10:50:23,438 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-10-08 10:50:23,438 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: Building fetch_rows query
2024-10-08 10:50:23,438 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: Building MATCH conditions
2024-10-08 10:50:23,438 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: Building SELECT clause
2024-10-08 10:50:24,525 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: Query execution time: 1.0760929584503174s
2024-10-08 10:50:24,525 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: Returning 100 rows out of 63172 results | limit=100 & offset=0
2024-10-08 10:50:24,527 - Query: 378577a2-ed2f-4edd-a64e-f8256e7d443a - INFO: Success
2024-10-08 11:12:43,620 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-08 11:12:43,622 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 11:12:43,622 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 11:12:43,738 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-08 11:12:43,738 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-08 11:12:43,754 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 11:12:43,846 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-08 11:12:45,212 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 11:12:45,212 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 11:12:45,212 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 11:12:45,213 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 11:12:45,213 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 11:12:45,250 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 11:12:45,265 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-08 11:12:45,265 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-08 11:12:45,266 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-08 11:12:45,266 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-08 11:12:45,266 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-08 11:12:45,286 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-08 11:12:45,348 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 11:12:45,348 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 11:12:45,348 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 11:12:45,348 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 11:12:45,349 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 11:12:45,385 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-08 11:12:45,385 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-08 11:12:45,385 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-08 11:12:45,385 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-08 11:12:45,386 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-08 11:13:16,056 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=65006)
2024-10-08 11:13:16,056 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-08 11:13:16,056 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-08 11:13:16,056 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: Building summary query
2024-10-08 11:13:16,056 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: Building MATCH conditions
2024-10-08 11:13:16,476 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: Query execution time: 0.4134657382965088s
2024-10-08 11:13:16,487 - Query: 837be07d-7204-4633-9b43-1805866eff58 - INFO: Success
2024-10-11 13:03:09,776 - Query: 9076ccab-e9c0-4865-a34b-76296d39d159 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56463)
2024-10-11 13:03:09,776 - Query: 9076ccab-e9c0-4865-a34b-76296d39d159 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-11 13:03:09,776 - Query: 9076ccab-e9c0-4865-a34b-76296d39d159 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:03:09,776 - Query: 9076ccab-e9c0-4865-a34b-76296d39d159 - INFO: Building summary query
2024-10-11 13:03:09,776 - Query: 9076ccab-e9c0-4865-a34b-76296d39d159 - INFO: Building MATCH conditions
2024-10-11 13:03:09,780 - Query: 9076ccab-e9c0-4865-a34b-76296d39d159 - ERROR: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 163, in summary_query
    for columnname in qnode.ADD_COLUMNS:
TypeError: 'NoneType' object is not iterable
2024-10-11 13:03:15,537 - Query: e01c003d-b4d5-467f-9d10-054b3addbe87 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56467)
2024-10-11 13:03:15,537 - Query: e01c003d-b4d5-467f-9d10-054b3addbe87 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-11 13:03:15,538 - Query: e01c003d-b4d5-467f-9d10-054b3addbe87 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:03:15,538 - Query: e01c003d-b4d5-467f-9d10-054b3addbe87 - INFO: Building summary query
2024-10-11 13:03:15,538 - Query: e01c003d-b4d5-467f-9d10-054b3addbe87 - INFO: Building MATCH conditions
2024-10-11 13:03:15,540 - Query: e01c003d-b4d5-467f-9d10-054b3addbe87 - ERROR: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 163, in summary_query
    for columnname in qnode.ADD_COLUMNS:
TypeError: 'NoneType' object is not iterable
2024-10-11 13:09:05,484 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:09:05,484 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:09:05,553 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:09:05,555 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:09:05,555 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:09:05,664 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:09:06,075 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:09:07,134 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:09:07,134 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:09:07,135 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:09:07,135 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:09:07,136 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:09:07,157 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:09:07,255 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:09:07,255 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:09:07,255 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:09:07,255 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:09:07,257 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:09:07,472 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56564)
2024-10-11 13:09:07,472 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-11 13:09:07,472 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:09:07,472 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: Building summary query
2024-10-11 13:09:07,472 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: Building MATCH conditions
2024-10-11 13:09:07,718 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:09:07,719 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:09:07,719 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:09:07,720 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:09:07,720 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:09:07,754 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:09:07,865 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:09:07,865 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:09:07,865 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:09:07,866 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:09:07,867 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:09:07,928 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: Query execution time: 0.4465818405151367s
2024-10-11 13:09:07,933 - Query: bf569336-7b0b-47b2-9b8e-10e0b0ceb760 - INFO: Success
2024-10-11 13:09:46,097 - Query: c37c558f-6fdf-4d29-acf1-716f68643175 - INFO: unique_values endpoint hit: Address(host='127.0.0.1', port=56579)
2024-10-11 13:09:46,098 - Query: c37c558f-6fdf-4d29-acf1-716f68643175 - INFO: http://127.0.0.1:8000/unique_values/diagnosis?count=false&totalCount=false
2024-10-11 13:09:46,098 - Query: c37c558f-6fdf-4d29-acf1-716f68643175 - INFO: Building unique_values query
2024-10-11 13:09:46,344 - Query: c37c558f-6fdf-4d29-acf1-716f68643175 - INFO: Query execution time: 0.2370920181274414s
2024-10-11 13:09:46,345 - Query: c37c558f-6fdf-4d29-acf1-716f68643175 - INFO: Returning 592 rows out of 592 results | limit=None & offset=None
2024-10-11 13:10:44,746 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: data/subject endpoint hit: Address(host='127.0.0.1', port=56586)
2024-10-11 13:10:44,746 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 10"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:10:44,746 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: http://127.0.0.1:8000/data/subject?limit=100&offset=0
2024-10-11 13:10:44,746 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: Building fetch_rows query
2024-10-11 13:10:44,746 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: Building MATCH conditions
2024-10-11 13:10:44,746 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: Building SELECT clause
2024-10-11 13:10:44,912 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: Query execution time: 0.15572142601013184s
2024-10-11 13:10:44,913 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: Returning 10 rows out of 10 results | limit=100 & offset=0
2024-10-11 13:10:44,918 - Query: 85f5a45b-3c2d-4f77-8ea3-cea7ea6793f1 - INFO: Success
2024-10-11 13:16:44,805 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56655)
2024-10-11 13:16:44,806 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:16:44,806 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:16:44,806 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: Building summary query
2024-10-11 13:16:44,806 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: Building MATCH conditions
2024-10-11 13:16:44,941 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: Query execution time: 0.1274881362915039s
2024-10-11 13:16:44,950 - Query: b14f3412-ecbd-42f4-ba61-bb14d49a9c64 - INFO: Success
2024-10-11 13:28:53,172 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:28:53,173 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:28:53,174 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:28:53,241 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:28:53,241 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:28:53,279 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:28:53,328 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:28:54,759 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:28:54,759 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:28:54,759 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:28:54,760 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:28:54,760 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:28:54,776 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:28:54,872 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:28:54,872 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:28:54,873 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:28:54,873 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:28:54,874 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:28:54,948 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:28:54,948 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:28:54,948 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:28:54,949 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:28:54,949 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:28:54,959 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:28:55,065 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:28:55,065 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:28:55,066 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:28:55,066 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:28:55,066 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:29:04,536 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:29:04,537 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:29:04,590 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:29:04,646 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:29:04,648 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:29:04,648 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:29:04,703 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:29:06,145 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:29:06,145 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:29:06,146 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:29:06,146 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:29:06,146 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:29:06,162 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:29:06,163 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:29:06,163 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:29:06,163 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:29:06,163 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:29:06,175 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:29:06,187 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:29:06,273 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:29:06,273 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:29:06,273 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:29:06,273 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:29:06,274 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:29:06,295 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:29:06,296 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:29:06,296 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:29:06,296 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:29:06,297 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:29:10,578 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56810)
2024-10-11 13:29:10,578 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:29:10,578 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:29:10,578 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: Building summary query
2024-10-11 13:29:10,578 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: Building MATCH conditions
2024-10-11 13:29:11,049 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: Query execution time: 0.4608798027038574s
2024-10-11 13:29:11,055 - Query: a068562a-6a57-47fa-b41f-6df4efd4a047 - INFO: Success
2024-10-11 13:30:47,641 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:30:47,642 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:30:47,642 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:30:47,734 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:30:47,734 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:30:47,741 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:30:47,821 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:30:49,274 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:30:49,274 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:30:49,275 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:30:49,275 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:30:49,275 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:30:49,293 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:30:49,358 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:30:49,358 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:30:49,359 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:30:49,359 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:30:49,359 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:30:49,376 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:30:49,393 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:30:49,393 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:30:49,393 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:30:49,393 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:30:49,394 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:30:49,488 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:30:49,489 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:30:49,489 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:30:49,489 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:30:49,490 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:31:20,445 - Query: c262cc70-9d64-4b89-bd3c-1afcc34d5556 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56845)
2024-10-11 13:31:20,445 - Query: c262cc70-9d64-4b89-bd3c-1afcc34d5556 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:31:20,445 - Query: c262cc70-9d64-4b89-bd3c-1afcc34d5556 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:31:20,445 - Query: c262cc70-9d64-4b89-bd3c-1afcc34d5556 - INFO: Building summary query
2024-10-11 13:31:20,445 - Query: c262cc70-9d64-4b89-bd3c-1afcc34d5556 - INFO: Building MATCH conditions
2024-10-11 13:31:20,850 - Query: c262cc70-9d64-4b89-bd3c-1afcc34d5556 - ERROR: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, observation_columns.diagnosis AS diagnosis 
FROM observation_columns) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.SyntaxError: subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 187, in summary_query
    result = query.all()
             ^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2351, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2236, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, observation_columns.diagnosis AS diagnosis 
FROM observation_columns) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-10-11 13:33:44,203 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:33:44,204 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:33:44,204 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:33:44,211 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:33:44,211 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:33:44,257 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:33:44,257 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:33:45,901 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:33:45,901 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:33:45,901 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:33:45,901 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:33:45,902 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:33:45,902 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:33:45,902 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:33:45,902 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:33:45,902 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:33:45,902 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:33:45,919 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:33:45,919 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:33:46,032 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:33:46,033 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:33:46,033 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:33:46,034 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:33:46,034 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:33:46,034 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:33:46,034 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:33:46,035 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:33:46,037 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:33:46,037 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:33:47,743 - Query: ff632912-9b6c-42e8-9b60-656dcb55c21e - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56886)
2024-10-11 13:33:47,743 - Query: ff632912-9b6c-42e8-9b60-656dcb55c21e - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:33:47,743 - Query: ff632912-9b6c-42e8-9b60-656dcb55c21e - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:33:47,744 - Query: ff632912-9b6c-42e8-9b60-656dcb55c21e - INFO: Building summary query
2024-10-11 13:33:47,744 - Query: ff632912-9b6c-42e8-9b60-656dcb55c21e - INFO: Building MATCH conditions
2024-10-11 13:33:48,140 - Query: ff632912-9b6c-42e8-9b60-656dcb55c21e - ERROR: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.SyntaxError: subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 187, in summary_query
    result = query.all()
             ^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2351, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2236, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-10-11 13:35:48,351 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:35:48,351 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:35:48,351 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:35:48,374 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:35:48,375 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:35:48,403 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:35:48,423 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:35:49,836 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:35:49,836 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:35:49,836 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:35:49,836 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:35:49,836 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:35:49,848 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:35:49,947 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:35:49,947 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:35:49,947 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:35:49,947 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:35:49,948 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:35:49,990 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:35:49,990 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:35:49,991 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:35:49,991 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:35:49,991 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:35:50,004 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:35:50,112 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:35:50,112 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:35:50,112 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:35:50,112 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:35:50,112 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:35:53,589 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:35:53,589 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:35:53,590 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:35:53,610 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:35:53,611 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:35:53,641 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:35:53,658 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:35:55,269 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:35:55,269 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:35:55,269 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:35:55,269 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:35:55,270 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:35:55,270 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:35:55,270 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:35:55,270 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:35:55,270 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:35:55,270 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:35:55,280 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:35:55,280 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:35:55,393 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:35:55,393 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:35:55,393 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:35:55,393 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:35:55,394 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:35:55,394 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:35:55,394 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:35:55,394 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:35:55,395 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:35:55,395 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:35:55,467 - Query: df382cfb-bdef-4ed1-9b49-6a2978a461b0 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56916)
2024-10-11 13:35:55,467 - Query: df382cfb-bdef-4ed1-9b49-6a2978a461b0 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:35:55,467 - Query: df382cfb-bdef-4ed1-9b49-6a2978a461b0 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:35:55,467 - Query: df382cfb-bdef-4ed1-9b49-6a2978a461b0 - INFO: Building summary query
2024-10-11 13:35:55,467 - Query: df382cfb-bdef-4ed1-9b49-6a2978a461b0 - INFO: Building MATCH conditions
2024-10-11 13:35:55,907 - Query: df382cfb-bdef-4ed1-9b49-6a2978a461b0 - ERROR: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.SyntaxError: subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 187, in summary_query
    result = query.all()
             ^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2351, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2236, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-10-11 13:35:57,662 - Query: 684ba726-4357-4d98-bd97-87a884c6d479 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56916)
2024-10-11 13:35:57,662 - Query: 684ba726-4357-4d98-bd97-87a884c6d479 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:35:57,662 - Query: 684ba726-4357-4d98-bd97-87a884c6d479 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:35:57,662 - Query: 684ba726-4357-4d98-bd97-87a884c6d479 - INFO: Building summary query
2024-10-11 13:35:57,662 - Query: 684ba726-4357-4d98-bd97-87a884c6d479 - INFO: Building MATCH conditions
2024-10-11 13:35:57,769 - Query: 684ba726-4357-4d98-bd97-87a884c6d479 - ERROR: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.SyntaxError: subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 187, in summary_query
    result = query.all()
             ^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2351, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2236, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-10-11 13:36:45,740 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:36:45,740 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:36:45,740 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:36:45,768 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:36:45,768 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:36:45,797 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:36:45,817 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:36:47,230 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:36:47,230 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:36:47,231 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:36:47,231 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:36:47,231 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:36:47,246 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:36:47,344 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:36:47,345 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:36:47,345 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:36:47,345 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:36:47,345 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:36:47,370 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:36:47,370 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:36:47,370 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:36:47,370 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:36:47,371 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:36:47,385 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:36:47,493 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:36:47,493 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:36:47,493 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:36:47,493 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:36:47,494 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:36:49,829 - Query: 67405178-467a-4c04-a41b-eb11db60f8db - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56935)
2024-10-11 13:36:49,829 - Query: 67405178-467a-4c04-a41b-eb11db60f8db - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:36:49,829 - Query: 67405178-467a-4c04-a41b-eb11db60f8db - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:36:49,829 - Query: 67405178-467a-4c04-a41b-eb11db60f8db - INFO: Building summary query
2024-10-11 13:36:49,829 - Query: 67405178-467a-4c04-a41b-eb11db60f8db - INFO: Building MATCH conditions
2024-10-11 13:36:50,226 - Query: 67405178-467a-4c04-a41b-eb11db60f8db - ERROR: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.SyntaxError: subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 187, in summary_query
    result = query.all()
             ^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2351, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2236, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.SyntaxError) subquery has too many columns
LINE 36: WHERE observation.subject_alias IN (SELECT filter_preselect....
                                         ^

[SQL: WITH filter_preselect AS 
(SELECT subject.id AS subject_id, subject.id_alias AS subject_id_alias, subject.crdc_id AS subject_crdc_id, subject.species AS species, subject.year_of_birth AS year_of_birth, subject.year_of_death AS year_of_death, subject.cause_of_death AS cause_of_death, subject.race AS race, subject.ethnicity AS ethnicity, subject.data_at_cds AS subject_data_at_cds, subject.data_at_gdc AS subject_data_at_gdc, subject.data_at_icdc AS subject_data_at_icdc, subject.data_at_idc AS subject_data_at_idc, subject.data_at_pdc AS subject_data_at_pdc, subject.data_source_count AS subject_data_source_count 
FROM subject 
WHERE subject.id_alias < %(id_alias_1)s), 
json_species AS 
(SELECT row_to_json(subquery) AS species_categories 
FROM (SELECT filter_preselect.species AS species, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.species) AS subquery), 
json_year_of_birth AS 
(SELECT row_to_json(subquery) AS year_of_birth_stats 
FROM (SELECT min(filter_preselect.year_of_birth) AS min, max(filter_preselect.year_of_birth) AS max, avg(filter_preselect.year_of_birth) AS mean, percentile_disc(%(percentile_disc_1)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS median, percentile_disc(%(percentile_disc_2)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS lower_quartile, percentile_disc(%(percentile_disc_3)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_birth) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_year_of_death AS 
(SELECT row_to_json(subquery) AS year_of_death_stats 
FROM (SELECT min(filter_preselect.year_of_death) AS min, max(filter_preselect.year_of_death) AS max, avg(filter_preselect.year_of_death) AS mean, percentile_disc(%(percentile_disc_4)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS median, percentile_disc(%(percentile_disc_5)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS lower_quartile, percentile_disc(%(percentile_disc_6)s) WITHIN GROUP (ORDER BY filter_preselect.year_of_death) AS upper_quartile 
FROM filter_preselect) AS subquery), 
json_cause_of_death AS 
(SELECT row_to_json(subquery) AS cause_of_death_categories 
FROM (SELECT filter_preselect.cause_of_death AS cause_of_death, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.cause_of_death) AS subquery), 
json_race AS 
(SELECT row_to_json(subquery) AS race_categories 
FROM (SELECT filter_preselect.race AS race, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.race) AS subquery), 
json_ethnicity AS 
(SELECT row_to_json(subquery) AS ethnicity_categories 
FROM (SELECT filter_preselect.ethnicity AS ethnicity, count(*) AS count_result 
FROM filter_preselect GROUP BY filter_preselect.ethnicity) AS subquery), 
json_subject_data_source_count AS 
(SELECT row_to_json(subquery) AS subject_data_source_count_stats 
FROM (SELECT min(filter_preselect.subject_data_source_count) AS min, max(filter_preselect.subject_data_source_count) AS max, avg(filter_preselect.subject_data_source_count) AS mean, percentile_disc(%(percentile_disc_7)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS median, percentile_disc(%(percentile_disc_8)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS lower_quartile, percentile_disc(%(percentile_disc_9)s) WITHIN GROUP (ORDER BY filter_preselect.subject_data_source_count) AS upper_quartile 
FROM filter_preselect) AS subquery), 
observation_columns AS 
(SELECT array_remove(array_agg(DISTINCT observation.diagnosis), NULL) AS diagnosis 
FROM observation 
WHERE observation.subject_alias IN (SELECT filter_preselect.subject_id, filter_preselect.subject_id_alias, filter_preselect.subject_crdc_id, filter_preselect.species, filter_preselect.year_of_birth, filter_preselect.year_of_death, filter_preselect.cause_of_death, filter_preselect.race, filter_preselect.ethnicity, filter_preselect.subject_data_at_cds, filter_preselect.subject_data_at_gdc, filter_preselect.subject_data_at_icdc, filter_preselect.subject_data_at_idc, filter_preselect.subject_data_at_pdc, filter_preselect.subject_data_source_count 
FROM filter_preselect))
 SELECT row_to_json(json_result) AS results 
FROM (SELECT (SELECT count(DISTINCT filter_preselect.subject_id_alias) AS count_result 
FROM filter_preselect) AS total_count, (SELECT count(DISTINCT file_describes_subject.file_alias) AS count_result 
FROM file_describes_subject 
WHERE file_describes_subject.subject_alias IN (SELECT filter_preselect.subject_id_alias AS subject_id_alias 
FROM filter_preselect)) AS file_count, (SELECT array_agg(json_species.species_categories) AS array_agg_1 
FROM json_species) AS species_summary, (SELECT array_agg(json_year_of_birth.year_of_birth_stats) AS array_agg_2 
FROM json_year_of_birth) AS year_of_birth_summary, (SELECT array_agg(json_year_of_death.year_of_death_stats) AS array_agg_3 
FROM json_year_of_death) AS year_of_death_summary, (SELECT array_agg(json_cause_of_death.cause_of_death_categories) AS array_agg_4 
FROM json_cause_of_death) AS cause_of_death_summary, (SELECT array_agg(json_race.race_categories) AS array_agg_5 
FROM json_race) AS race_summary, (SELECT array_agg(json_ethnicity.ethnicity_categories) AS array_agg_6 
FROM json_ethnicity) AS ethnicity_summary, (SELECT array_agg(json_subject_data_source_count.subject_data_source_count_stats) AS array_agg_7 
FROM json_subject_data_source_count) AS subject_data_source_count_summary, (SELECT row_to_json(subquery) AS row_to_json_1 
FROM (SELECT sum(CAST(filter_preselect.subject_data_at_cds AS INTEGER)) AS cds, sum(CAST(filter_preselect.subject_data_at_gdc AS INTEGER)) AS gdc, sum(CAST(filter_preselect.subject_data_at_icdc AS INTEGER)) AS icdc, sum(CAST(filter_preselect.subject_data_at_idc AS INTEGER)) AS idc, sum(CAST(filter_preselect.subject_data_at_pdc AS INTEGER)) AS pdc 
FROM filter_preselect) AS subquery) AS data_source, (SELECT observation_columns.diagnosis 
FROM observation_columns) AS diagnosis) AS json_result]
[parameters: {'id_alias_1': 100, 'percentile_disc_1': 0.5, 'percentile_disc_2': 0.25, 'percentile_disc_3': 0.75, 'percentile_disc_4': 0.5, 'percentile_disc_5': 0.25, 'percentile_disc_6': 0.75, 'percentile_disc_7': 0.5, 'percentile_disc_8': 0.25, 'percentile_disc_9': 0.75}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-10-11 13:38:38,461 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:38:38,461 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:38:38,461 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:38:38,470 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:38:38,470 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:38:38,518 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:38:38,518 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:38:39,957 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:38:39,957 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:38:39,958 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:38:39,958 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:38:39,958 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:38:39,961 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:38:39,961 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:38:39,962 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:38:39,962 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:38:39,962 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:38:39,973 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:38:39,978 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:38:40,073 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:38:40,073 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:38:40,073 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:38:40,073 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:38:40,074 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:38:40,079 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:38:40,079 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:38:40,080 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:38:40,080 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:38:40,080 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:38:43,232 - Query: f5284e5a-1ffd-4a59-915e-c220a84e22bf - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=56956)
2024-10-11 13:38:43,233 - Query: f5284e5a-1ffd-4a59-915e-c220a84e22bf - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:38:43,233 - Query: f5284e5a-1ffd-4a59-915e-c220a84e22bf - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:38:43,233 - Query: f5284e5a-1ffd-4a59-915e-c220a84e22bf - INFO: Building summary query
2024-10-11 13:38:43,233 - Query: f5284e5a-1ffd-4a59-915e-c220a84e22bf - INFO: Building MATCH conditions
2024-10-11 13:38:43,235 - Query: f5284e5a-1ffd-4a59-915e-c220a84e22bf - ERROR: cannot access local variable 'select_cols' where it is not associated with a value
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 139, in build_foreign_array_summary_preselect
    log.debug(select_cols)
              ^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'select_cols' where it is not associated with a value
2024-10-11 13:41:19,385 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:41:19,385 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:41:19,385 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:41:19,401 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:41:19,401 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:41:19,441 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:41:19,459 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:41:20,871 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:41:20,871 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:41:20,871 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:41:20,872 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:41:20,872 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:41:20,873 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:41:20,873 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:41:20,874 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:41:20,874 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:41:20,874 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:41:20,885 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:41:20,885 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:41:20,984 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:41:20,984 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:41:20,984 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:41:20,984 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:41:20,985 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:41:20,986 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:41:20,986 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:41:20,986 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:41:20,987 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:41:20,988 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:41:22,947 - Query: b4052d96-a4a2-4d86-8a4b-74c73fce32f4 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57040)
2024-10-11 13:41:22,947 - Query: b4052d96-a4a2-4d86-8a4b-74c73fce32f4 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:41:22,947 - Query: b4052d96-a4a2-4d86-8a4b-74c73fce32f4 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:41:22,947 - Query: b4052d96-a4a2-4d86-8a4b-74c73fce32f4 - INFO: Building summary query
2024-10-11 13:41:22,947 - Query: b4052d96-a4a2-4d86-8a4b-74c73fce32f4 - INFO: Building MATCH conditions
2024-10-11 13:41:22,949 - Query: b4052d96-a4a2-4d86-8a4b-74c73fce32f4 - ERROR: cannot access local variable 'select_cols' where it is not associated with a value
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 139, in build_foreign_array_summary_preselect
    log.debug(select_cols)
              ^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'select_cols' where it is not associated with a value
2024-10-11 13:41:51,163 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:41:51,164 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:41:51,164 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:41:51,190 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:41:51,190 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:41:51,219 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:41:51,241 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:41:52,708 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:41:52,708 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:41:52,709 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:41:52,709 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:41:52,709 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:41:52,724 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:41:52,823 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:41:52,823 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:41:52,823 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:41:52,823 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:41:52,824 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:41:52,878 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:41:52,878 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:41:52,878 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:41:52,879 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:41:52,879 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:41:52,889 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:41:52,998 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:41:52,998 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:41:52,999 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:41:52,999 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:41:52,999 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:41:54,180 - Query: 9d98bc6a-9ead-4290-9870-455d6e7b05ec - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57052)
2024-10-11 13:41:54,180 - Query: 9d98bc6a-9ead-4290-9870-455d6e7b05ec - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:41:54,180 - Query: 9d98bc6a-9ead-4290-9870-455d6e7b05ec - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:41:54,180 - Query: 9d98bc6a-9ead-4290-9870-455d6e7b05ec - INFO: Building summary query
2024-10-11 13:41:54,180 - Query: 9d98bc6a-9ead-4290-9870-455d6e7b05ec - INFO: Building MATCH conditions
2024-10-11 13:41:54,182 - Query: 9d98bc6a-9ead-4290-9870-455d6e7b05ec - ERROR: IN expression list, SELECT construct, or bound parameter object expected, got 'id_alias'.
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 144, in build_foreign_array_summary_preselect
    relation.foreign_column.in_(relation.entity_column.name)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/operators.py", line 925, in in_
    return self.operate(in_op, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 1513, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/operators.py", line 2102, in in_op
    return a.in_(b)
           ^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/operators.py", line 925, in in_
    return self.operate(in_op, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/type_api.py", line 194, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/default_comparator.py", line 219, in _in_impl
    seq_or_selectable = coercions.expect(
                        ^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 868, in _literal_coercion
    self._raise_for_expected(element, **kw)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: IN expression list, SELECT construct, or bound parameter object expected, got 'id_alias'.
2024-10-11 13:43:49,036 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:43:49,037 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:43:49,037 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:43:49,075 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:43:49,075 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:43:49,100 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:43:49,126 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:43:50,556 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:43:50,557 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:43:50,557 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:43:50,558 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:43:50,558 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:43:50,560 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:43:50,560 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:43:50,560 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:43:50,561 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:43:50,561 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:43:50,582 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:43:50,582 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:43:50,682 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:43:50,682 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:43:50,682 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:43:50,682 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:43:50,683 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:43:50,684 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:43:50,684 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:43:50,684 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:43:50,684 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:43:50,685 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:43:53,133 - Query: c0655fb6-64db-4d22-a439-e1cf2d3531c2 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57077)
2024-10-11 13:43:53,133 - Query: c0655fb6-64db-4d22-a439-e1cf2d3531c2 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:43:53,133 - Query: c0655fb6-64db-4d22-a439-e1cf2d3531c2 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:43:53,133 - Query: c0655fb6-64db-4d22-a439-e1cf2d3531c2 - INFO: Building summary query
2024-10-11 13:43:53,133 - Query: c0655fb6-64db-4d22-a439-e1cf2d3531c2 - INFO: Building MATCH conditions
2024-10-11 13:43:53,137 - Query: c0655fb6-64db-4d22-a439-e1cf2d3531c2 - ERROR: cannot access local variable 'preselect_columns' where it is not associated with a value
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 144, in build_foreign_array_summary_preselect
    relation.foreign_column.in_(get_cte_column(preselect_columns, f'{relation.entity_tablename}_{relation.entity_column.name}'))
                                               ^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'preselect_columns' where it is not associated with a value
2024-10-11 13:44:12,798 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:44:12,798 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:44:12,798 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:44:12,798 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:44:12,798 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:44:12,846 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:44:12,846 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:44:14,313 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:44:14,314 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:44:14,314 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:44:14,314 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:44:14,314 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:44:14,314 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:44:14,315 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:44:14,315 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:44:14,315 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:44:14,315 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:44:14,331 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:44:14,331 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:44:14,433 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:44:14,433 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:44:14,433 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:44:14,434 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:44:14,434 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:44:14,434 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:44:14,434 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:44:14,434 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:44:14,435 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:44:14,435 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:44:16,474 - Query: 24de551d-fced-4c0d-97d3-48fef30ef342 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57086)
2024-10-11 13:44:16,474 - Query: 24de551d-fced-4c0d-97d3-48fef30ef342 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:44:16,474 - Query: 24de551d-fced-4c0d-97d3-48fef30ef342 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:44:16,474 - Query: 24de551d-fced-4c0d-97d3-48fef30ef342 - INFO: Building summary query
2024-10-11 13:44:16,474 - Query: 24de551d-fced-4c0d-97d3-48fef30ef342 - INFO: Building MATCH conditions
2024-10-11 13:44:16,477 - Query: 24de551d-fced-4c0d-97d3-48fef30ef342 - ERROR: IN expression list, SELECT construct, or bound parameter object expected, got Column('subject_id_alias', BIGINT(), table=<filter_preselect>, primary_key=True, nullable=False).
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 144, in build_foreign_array_summary_preselect
    relation.foreign_column.in_(get_cte_column(preselect_query, f'{relation.entity_tablename}_{relation.entity_column.name}'))
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/operators.py", line 925, in in_
    return self.operate(in_op, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 1513, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/operators.py", line 2102, in in_op
    return a.in_(b)
           ^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/operators.py", line 925, in in_
    return self.operate(in_op, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/type_api.py", line 194, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/default_comparator.py", line 219, in _in_impl
    seq_or_selectable = coercions.expect(
                        ^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 425, in expect
    return impl._implicit_coercions(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 827, in _implicit_coercions
    self._raise_for_expected(element, argname, resolved)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: IN expression list, SELECT construct, or bound parameter object expected, got Column('subject_id_alias', BIGINT(), table=<filter_preselect>, primary_key=True, nullable=False).
2024-10-11 13:45:08,068 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:45:08,070 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:45:08,070 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:45:08,147 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:45:08,147 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:45:08,186 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:45:08,243 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:45:09,658 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:45:09,658 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:45:09,658 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:45:09,659 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:45:09,659 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:45:09,705 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:45:09,806 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:45:09,806 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:45:09,806 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:45:09,806 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:45:09,807 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:45:09,850 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:45:09,850 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:45:09,850 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:45:09,851 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:45:09,851 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:45:09,872 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:45:09,980 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:45:09,981 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:45:09,981 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:45:09,981 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:45:09,981 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:45:10,539 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57100)
2024-10-11 13:45:10,539 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:45:10,539 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:45:10,539 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: Building summary query
2024-10-11 13:45:10,539 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: Building MATCH conditions
2024-10-11 13:45:11,004 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: Query execution time: 0.45287322998046875s
2024-10-11 13:45:11,015 - Query: c8b0246c-db50-4e4b-bce0-c8db5efc4d49 - INFO: Success
2024-10-11 13:45:27,120 - Query: 6f55578e-06d1-465b-8b4c-d3a382d36ea5 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57104)
2024-10-11 13:45:27,121 - Query: 6f55578e-06d1-465b-8b4c-d3a382d36ea5 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:45:27,121 - Query: 6f55578e-06d1-465b-8b4c-d3a382d36ea5 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:45:27,121 - Query: 6f55578e-06d1-465b-8b4c-d3a382d36ea5 - INFO: Building summary query
2024-10-11 13:45:27,121 - Query: 6f55578e-06d1-465b-8b4c-d3a382d36ea5 - INFO: Building MATCH conditions
2024-10-11 13:45:27,125 - Query: 6f55578e-06d1-465b-8b4c-d3a382d36ea5 - ERROR: Column Not Found: size, did you mean: ['dicom_series_size', 'file_size', 'dicom_series_instance_size']
'size'
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/classes/DatabaseMap.py", line 93, in get_column_info
    return self.column_map[columnname]
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^
KeyError: 'size'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 165, in summary_query
    column_info = DB_MAP.get_column_info(columnname)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/classes/DatabaseMap.py", line 101, in get_column_info
    raise ColumnNotFound(error_message)
cda_api.classes.exceptions.ColumnNotFound: Column Not Found: size, did you mean: ['dicom_series_size', 'file_size', 'dicom_series_instance_size']
'size'
2024-10-11 13:45:34,403 - Query: 422f0d23-70fb-4ce9-9043-332b5ec0aa2f - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57107)
2024-10-11 13:45:34,403 - Query: 422f0d23-70fb-4ce9-9043-332b5ec0aa2f - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:45:34,403 - Query: 422f0d23-70fb-4ce9-9043-332b5ec0aa2f - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:45:34,403 - Query: 422f0d23-70fb-4ce9-9043-332b5ec0aa2f - INFO: Building summary query
2024-10-11 13:45:34,403 - Query: 422f0d23-70fb-4ce9-9043-332b5ec0aa2f - INFO: Building MATCH conditions
2024-10-11 13:45:34,408 - Query: 422f0d23-70fb-4ce9-9043-332b5ec0aa2f - ERROR: file_alias
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'file_alias'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 129, in build_foreign_array_summary_preselect
    relation.entity_mapping_column.in_(db.query(get_cte_column(preselect_query, relation.foreign_mapping_column.name)))
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 25, in get_cte_column
    return getattr(cte.c, columnname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: file_alias
2024-10-11 13:46:22,084 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:46:22,085 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:46:22,085 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:46:22,138 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:46:22,138 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:46:22,138 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:46:22,202 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:46:23,737 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:46:23,737 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:46:23,737 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:46:23,738 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:46:23,738 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:46:23,783 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:46:23,783 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:46:23,784 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:46:23,784 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:46:23,784 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:46:24,112 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:46:24,124 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:46:24,228 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:46:24,229 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:46:24,229 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:46:24,229 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:46:24,231 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:46:24,234 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:46:24,234 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:46:24,234 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:46:24,234 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:46:24,236 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:46:31,425 - Query: f9ed2389-45ae-4987-9c68-aec6fe502436 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57119)
2024-10-11 13:46:31,425 - Query: f9ed2389-45ae-4987-9c68-aec6fe502436 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:46:31,425 - Query: f9ed2389-45ae-4987-9c68-aec6fe502436 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:46:31,425 - Query: f9ed2389-45ae-4987-9c68-aec6fe502436 - INFO: Building summary query
2024-10-11 13:46:31,425 - Query: f9ed2389-45ae-4987-9c68-aec6fe502436 - INFO: Building MATCH conditions
2024-10-11 13:46:31,427 - Query: f9ed2389-45ae-4987-9c68-aec6fe502436 - ERROR: id_alias
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'id_alias'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 129, in build_foreign_array_summary_preselect
    relation.entity_mapping_column.in_(db.query(get_cte_column(preselect_query, relation.foreign_column.name)))
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 25, in get_cte_column
    return getattr(cte.c, columnname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: id_alias
2024-10-11 13:46:52,699 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:46:52,700 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:46:52,700 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:46:52,737 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:46:52,737 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:46:52,757 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:46:52,796 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:46:54,359 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:46:54,359 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:46:54,360 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:46:54,360 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:46:54,360 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:46:54,379 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:46:54,379 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:46:54,379 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:46:54,380 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:46:54,380 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:46:54,396 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:46:54,407 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:46:54,505 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:46:54,505 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:46:54,505 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:46:54,505 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:46:54,506 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:46:54,516 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:46:54,516 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:46:54,516 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:46:54,516 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:46:54,517 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:46:56,060 - Query: ffc7e2fd-d40d-4a14-949f-7c3c5a7a9f30 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57128)
2024-10-11 13:46:56,060 - Query: ffc7e2fd-d40d-4a14-949f-7c3c5a7a9f30 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:46:56,061 - Query: ffc7e2fd-d40d-4a14-949f-7c3c5a7a9f30 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:46:56,061 - Query: ffc7e2fd-d40d-4a14-949f-7c3c5a7a9f30 - INFO: Building summary query
2024-10-11 13:46:56,061 - Query: ffc7e2fd-d40d-4a14-949f-7c3c5a7a9f30 - INFO: Building MATCH conditions
2024-10-11 13:46:56,063 - Query: ffc7e2fd-d40d-4a14-949f-7c3c5a7a9f30 - ERROR: 'CTE' object has no attribute 'statement'
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 126, in build_foreign_array_summary_preselect
    log.debug(print_query(preselect_query))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 20, in print_query
    print(query_to_string(q, indented=True))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 11, in query_to_string
    sql_string = str(q.statement.compile(compile_kwargs={"literal_binds": True}, dialect=postgresql.dialect()))
                     ^^^^^^^^^^^
AttributeError: 'CTE' object has no attribute 'statement'
2024-10-11 13:47:08,998 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:47:08,999 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:47:08,999 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:47:09,019 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:47:09,019 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:47:09,054 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:47:09,071 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:47:10,505 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:47:10,506 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:47:10,506 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:47:10,506 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:47:10,506 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:47:10,523 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:47:10,620 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:47:10,620 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:47:10,620 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:47:10,621 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:47:10,621 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:47:10,641 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:47:10,641 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:47:10,641 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:47:10,642 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:47:10,642 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:47:10,648 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:47:10,760 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:47:10,760 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:47:10,760 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:47:10,760 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:47:10,761 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:47:12,215 - Query: 134574e1-fb9f-4197-8fbc-dd38d96d7045 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57136)
2024-10-11 13:47:12,215 - Query: 134574e1-fb9f-4197-8fbc-dd38d96d7045 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:47:12,215 - Query: 134574e1-fb9f-4197-8fbc-dd38d96d7045 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:47:12,215 - Query: 134574e1-fb9f-4197-8fbc-dd38d96d7045 - INFO: Building summary query
2024-10-11 13:47:12,215 - Query: 134574e1-fb9f-4197-8fbc-dd38d96d7045 - INFO: Building MATCH conditions
2024-10-11 13:47:12,217 - Query: 134574e1-fb9f-4197-8fbc-dd38d96d7045 - ERROR: statement
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'statement'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 126, in build_foreign_array_summary_preselect
    log.debug(print_query(preselect_query.c))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 20, in print_query
    print(query_to_string(q, indented=True))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 11, in query_to_string
    sql_string = str(q.statement.compile(compile_kwargs={"literal_binds": True}, dialect=postgresql.dialect()))
                     ^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: statement
2024-10-11 13:47:32,278 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:47:32,278 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:47:32,278 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:47:32,313 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:47:32,313 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:47:32,344 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:47:32,365 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:47:33,982 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:47:33,982 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:47:33,982 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:47:33,982 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:47:33,983 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:47:33,983 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:47:33,983 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:47:33,983 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:47:33,984 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:47:33,984 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:47:34,021 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:47:34,021 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:47:34,132 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:47:34,132 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:47:34,133 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:47:34,133 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:47:34,134 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:47:34,135 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:47:34,135 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:47:34,135 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:47:34,135 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:47:34,137 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:47:35,092 - Query: aa072045-79ce-4520-bccc-ea50e737db89 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57146)
2024-10-11 13:47:35,093 - Query: aa072045-79ce-4520-bccc-ea50e737db89 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:47:35,093 - Query: aa072045-79ce-4520-bccc-ea50e737db89 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:47:35,093 - Query: aa072045-79ce-4520-bccc-ea50e737db89 - INFO: Building summary query
2024-10-11 13:47:35,093 - Query: aa072045-79ce-4520-bccc-ea50e737db89 - INFO: Building MATCH conditions
2024-10-11 13:47:35,096 - Query: aa072045-79ce-4520-bccc-ea50e737db89 - ERROR: id_alias
Traceback (most recent call last):
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'id_alias'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 174, in summary_query
    foreign_array_preselect, preselect_columns = build_foreign_array_summary_preselect(db, endpoint_tablename, foreign_tablename, columns, preselect_query)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 130, in build_foreign_array_summary_preselect
    relation.entity_mapping_column.in_(db.query(get_cte_column(preselect_query, relation.foreign_column.name)))
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 25, in get_cte_column
    return getattr(cte.c, columnname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: id_alias
2024-10-11 13:49:13,988 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:49:13,989 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:49:13,989 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:49:14,010 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:49:14,010 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:49:14,053 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:49:14,053 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:49:15,528 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:49:15,528 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:49:15,529 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:49:15,529 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:49:15,529 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:49:15,529 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:49:15,530 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:49:15,530 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:49:15,530 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:49:15,530 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:49:15,559 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:49:15,559 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:49:15,661 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:49:15,662 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:49:15,663 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:49:15,663 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:49:15,827 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57174)
2024-10-11 13:49:15,827 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:49:15,827 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:49:15,827 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: Building summary query
2024-10-11 13:49:15,827 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: Building MATCH conditions
2024-10-11 13:49:16,530 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: Query execution time: 0.6953978538513184s
2024-10-11 13:49:16,538 - Query: ffa66698-d86f-4ea5-814f-68c2e7a9cf10 - INFO: Success
2024-10-11 13:49:37,683 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57179)
2024-10-11 13:49:37,684 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 10"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:49:37,684 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:49:37,684 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: Building summary query
2024-10-11 13:49:37,684 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: Building MATCH conditions
2024-10-11 13:49:37,815 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: Query execution time: 0.11911296844482422s
2024-10-11 13:49:37,827 - Query: 5099524c-ddb2-492f-95df-8601747e5ecb - INFO: Success
2024-10-11 13:49:58,455 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57181)
2024-10-11 13:49:58,455 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 1"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_size"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:49:58,455 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:49:58,455 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: Building summary query
2024-10-11 13:49:58,455 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: Building MATCH conditions
2024-10-11 13:49:58,563 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: Query execution time: 0.1019749641418457s
2024-10-11 13:49:58,571 - Query: 95b6cfd5-0623-4422-97e3-3974e7db796a - INFO: Success
2024-10-11 13:50:20,862 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57184)
2024-10-11 13:50:20,863 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 1"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:50:20,863 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:50:20,863 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: Building summary query
2024-10-11 13:50:20,863 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: Building MATCH conditions
2024-10-11 13:50:20,979 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: Query execution time: 0.10670208930969238s
2024-10-11 13:50:20,991 - Query: 52aaff0c-96a3-47c2-9971-6cdab2b146b7 - INFO: Success
2024-10-11 13:50:38,600 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57186)
2024-10-11 13:50:38,600 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:50:38,601 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:50:38,601 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: Building summary query
2024-10-11 13:50:38,601 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: Building MATCH conditions
2024-10-11 13:50:38,826 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: Query execution time: 0.21591877937316895s
2024-10-11 13:50:38,837 - Query: 43d8eb0e-6c4b-4f4e-9867-92774f1a589d - INFO: Success
2024-10-11 13:52:06,256 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57203)
2024-10-11 13:52:06,256 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:52:06,256 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:52:06,257 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: Building summary query
2024-10-11 13:52:06,257 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: Building MATCH conditions
2024-10-11 13:52:06,400 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: Query execution time: 0.1365947723388672s
2024-10-11 13:52:06,406 - Query: 40b8c482-8c7f-4f90-b008-4795f4720f56 - INFO: Success
2024-10-11 13:54:08,444 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:54:08,445 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:54:08,453 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:54:08,454 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:54:08,454 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:54:08,500 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:54:08,514 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:54:09,924 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:54:09,924 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:54:09,925 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:54:09,925 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:54:09,925 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:54:09,941 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:54:09,968 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:54:09,968 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:54:09,968 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:54:09,969 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:54:09,969 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:54:09,984 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:54:10,037 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:54:10,037 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:54:10,037 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:54:10,037 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:54:10,038 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:54:10,084 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:54:10,084 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:54:10,084 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:54:10,084 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:54:10,085 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:54:11,096 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57226)
2024-10-11 13:54:11,096 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:54:11,096 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:54:11,096 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: Building summary query
2024-10-11 13:54:11,096 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: Building MATCH conditions
2024-10-11 13:54:11,512 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: Query execution time: 0.40869808197021484s
2024-10-11 13:54:11,521 - Query: c9ca0990-ee72-4f0a-b93b-e1ca62688de5 - INFO: Success
2024-10-11 13:54:26,675 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57234)
2024-10-11 13:54:26,675 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:54:26,675 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:54:26,675 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: Building summary query
2024-10-11 13:54:26,675 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: Building MATCH conditions
2024-10-11 13:54:26,892 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: Query execution time: 0.20847392082214355s
2024-10-11 13:54:26,904 - Query: 2b849b3a-88ce-40f6-8b47-4af49e42f79b - INFO: Success
2024-10-11 13:54:37,021 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57236)
2024-10-11 13:54:37,022 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type", "diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:54:37,023 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:54:37,023 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: Building summary query
2024-10-11 13:54:37,023 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: Building MATCH conditions
2024-10-11 13:54:37,248 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: Query execution time: 0.21725010871887207s
2024-10-11 13:54:37,261 - Query: 13cb9209-25c2-46e6-b7f9-fae380643157 - INFO: Success
2024-10-11 13:54:45,232 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57238)
2024-10-11 13:54:45,232 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type", "diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:54:45,233 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:54:45,233 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: Building summary query
2024-10-11 13:54:45,233 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: Building MATCH conditions
2024-10-11 13:54:45,439 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: Query execution time: 0.197523832321167s
2024-10-11 13:54:45,452 - Query: cb0e1c49-24bc-40f8-99f5-6ade62307e22 - INFO: Success
2024-10-11 13:55:54,876 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:55:54,877 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:55:54,877 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:55:54,908 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:55:54,908 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:55:54,934 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:55:54,957 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:55:56,379 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:55:56,379 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:55:56,379 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:55:56,380 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:55:56,380 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:55:56,396 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:55:56,495 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:55:56,495 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:55:56,495 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:55:56,495 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:55:56,496 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:55:56,544 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:55:56,544 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:55:56,545 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:55:56,545 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:55:56,545 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:55:56,558 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:55:56,668 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:55:56,668 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:55:56,668 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:55:56,668 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:55:56,668 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:55:58,312 - Query: 537658e5-e7ce-4d3d-8042-c29b122f4828 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57254)
2024-10-11 13:55:58,312 - Query: 537658e5-e7ce-4d3d-8042-c29b122f4828 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type", "diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:55:58,312 - Query: 537658e5-e7ce-4d3d-8042-c29b122f4828 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:55:58,312 - Query: 537658e5-e7ce-4d3d-8042-c29b122f4828 - INFO: Building summary query
2024-10-11 13:55:58,312 - Query: 537658e5-e7ce-4d3d-8042-c29b122f4828 - INFO: Building MATCH conditions
2024-10-11 13:55:58,320 - Query: 537658e5-e7ce-4d3d-8042-c29b122f4828 - ERROR: 'function' object has no attribute 'lower'
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 184, in summary_query
    log.debug(f'Query:\n{"-"*60}\n{query_to_string(query)}\n{"-"*60}')
                                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_utilities.py", line 11, in query_to_string
    sql_string = str(q.statement.compile(compile_kwargs={"literal_binds": True}, dialect=postgresql.dialect()))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 308, in compile
    return self._compiler(dialect, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 316, in _compiler
    return dialect.statement_compiler(dialect, self, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 1429, in __init__
    Compiled.__init__(self, dialect, statement, **kwargs)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 870, in __init__
    self.string = self.process(self.statement, **compile_kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 915, in process
    return obj._compiler_dispatch(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4972, in _compose_select_body
    [
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4973, in <listcomp>
    f._compiler_dispatch(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4305, in visit_subquery
    return self.visit_alias(subquery, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4262, in visit_alias
    inner = alias.element._compiler_dispatch(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4764, in visit_select
    for c in [
             ^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4765, in <listcomp>
    self._label_select_column(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 4590, in _label_select_column
    return result_expr._compiler_dispatch(self, **column_clause_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
           ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 2556, in visit_label
    + self.preparer.format_label(label, labelname)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 7614, in format_label
    return self.quote(name or label.name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 7582, in quote
    if self._requires_quotes(ident):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/compiler.py", line 7488, in _requires_quotes
    lc_value = value.lower()
               ^^^^^^^^^^^
AttributeError: 'function' object has no attribute 'lower'
2024-10-11 13:56:20,031 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:56:20,032 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:56:20,032 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:56:20,071 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:56:20,071 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:56:20,089 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:56:20,121 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:56:21,554 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:56:21,554 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:56:21,555 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:56:21,555 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:56:21,555 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:56:21,593 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:56:21,692 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:56:21,692 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:56:21,692 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:56:21,692 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:56:21,693 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:56:21,717 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:56:21,717 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:56:21,717 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:56:21,718 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:56:21,718 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:56:21,755 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:56:21,865 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:56:21,865 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:56:21,865 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:56:21,865 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:56:21,866 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:56:24,057 - Query: 3fbe6799-a434-4447-9d57-cdb891781986 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57264)
2024-10-11 13:56:24,057 - Query: 3fbe6799-a434-4447-9d57-cdb891781986 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type", "diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:56:24,057 - Query: 3fbe6799-a434-4447-9d57-cdb891781986 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:56:24,057 - Query: 3fbe6799-a434-4447-9d57-cdb891781986 - INFO: Building summary query
2024-10-11 13:56:24,057 - Query: 3fbe6799-a434-4447-9d57-cdb891781986 - INFO: Building MATCH conditions
2024-10-11 13:56:24,059 - Query: 3fbe6799-a434-4447-9d57-cdb891781986 - ERROR: Column expression, FROM clause, or other columns clause element expected, got <sqlalchemy.sql.selectable.Select object at 0x10c6f4f10> object resolved from <sqlalchemy.orm.query.Query object at 0x10c6f4190> object. To create a FROM clause from a <class 'sqlalchemy.sql.selectable.Select'> object, use the .subquery() method. (Background on this error at: https://sqlalche.me/e/20/89ve)
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 180, in summary_query
    subquery = db.query(*summary_select_clause).subquery('json_result')
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2941, in query
    return self._query_cls(entities, self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 275, in __init__
    self._set_entities(entities)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 287, in _set_entities
    self._raw_columns = [
                        ^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 288, in <listcomp>
    coercions.expect(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 425, in expect
    return impl._implicit_coercions(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 489, in _implicit_coercions
    self._raise_for_expected(element, argname, resolved)
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 1122, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 693, in _raise_for_expected
    super()._raise_for_expected(
  File "/Users/tanner.coon/.pyenv/versions/3.11.7/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: Column expression, FROM clause, or other columns clause element expected, got <sqlalchemy.sql.selectable.Select object at 0x10c6f4f10> object resolved from <sqlalchemy.orm.query.Query object at 0x10c6f4190> object. To create a FROM clause from a <class 'sqlalchemy.sql.selectable.Select'> object, use the .subquery() method. (Background on this error at: https://sqlalche.me/e/20/89ve)
2024-10-11 13:57:03,930 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-11 13:57:03,930 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:57:03,930 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:57:03,974 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-11 13:57:03,975 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-11 13:57:03,987 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:57:04,025 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-11 13:57:05,440 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:57:05,440 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:57:05,440 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:57:05,441 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:57:05,441 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:57:05,478 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:57:05,576 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:57:05,577 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:57:05,577 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:57:05,577 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:57:05,578 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:57:05,600 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-11 13:57:05,600 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-11 13:57:05,600 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-11 13:57:05,601 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-11 13:57:05,601 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-11 13:57:05,628 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-11 13:57:05,736 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-11 13:57:05,736 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-11 13:57:05,736 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-11 13:57:05,736 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-11 13:57:05,737 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-11 13:57:08,059 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57275)
2024-10-11 13:57:08,059 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type", "diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:57:08,059 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:57:08,059 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: Building summary query
2024-10-11 13:57:08,059 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: Building MATCH conditions
2024-10-11 13:57:08,622 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: Query execution time: 0.5536062717437744s
2024-10-11 13:57:08,635 - Query: bf277018-6090-41c6-8fb3-2871678dde9d - INFO: Success
2024-10-11 13:57:40,938 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=57281)
2024-10-11 13:57:40,938 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 100"], "MATCH_SOME": None, "ADD_COLUMNS": ["file_type", "sex", "diagnosis"], "EXCLUDE_COLUMNS": None}
2024-10-11 13:57:40,938 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-11 13:57:40,938 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: Building summary query
2024-10-11 13:57:40,938 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: Building MATCH conditions
2024-10-11 13:57:41,177 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: Query execution time: 0.23126006126403809s
2024-10-11 13:57:41,190 - Query: 6478ee48-6380-4650-9ef9-9535be587f70 - INFO: Success
2024-10-17 10:02:26,490 -  - INFO: Building summary query
2024-10-17 10:02:26,493 -  - INFO: Building MATCH conditions
2024-10-22 10:15:29,529 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-22 10:15:29,531 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-22 10:15:29,531 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-22 10:15:29,990 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-22 10:15:31,636 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-22 10:15:31,636 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-22 10:15:31,637 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-22 10:15:31,637 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-22 10:15:31,637 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-22 10:15:31,674 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-22 10:15:31,781 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-22 10:15:31,781 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-22 10:15:31,781 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-22 10:15:31,781 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-22 10:15:31,782 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-22 10:15:33,346 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-22 10:15:33,346 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-22 10:15:33,403 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-22 10:15:34,989 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-22 10:15:34,989 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-22 10:15:34,990 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-22 10:15:34,990 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-22 10:15:34,991 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-22 10:15:35,010 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-22 10:15:35,116 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-22 10:15:35,117 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-22 10:15:35,117 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-22 10:15:35,117 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-22 10:15:35,119 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-22 10:15:35,798 - Query: a54352a4-089a-43e0-b7d7-e06414dd0543 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=49220)
2024-10-22 10:15:35,798 - Query: a54352a4-089a-43e0-b7d7-e06414dd0543 - INFO: QNode: {"MATCH_ALL": ["subject_id_alias < 10"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-22 10:15:35,798 - Query: a54352a4-089a-43e0-b7d7-e06414dd0543 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-22 10:15:35,798 - Query: a54352a4-089a-43e0-b7d7-e06414dd0543 - INFO: Building summary query
2024-10-22 10:15:35,798 - Query: a54352a4-089a-43e0-b7d7-e06414dd0543 - INFO: Building MATCH conditions
2024-10-22 10:15:35,802 - Query: a54352a4-089a-43e0-b7d7-e06414dd0543 - ERROR: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 164, in summary_query
    for columnname in qnode.ADD_COLUMNS:
TypeError: 'NoneType' object is not iterable
2024-10-24 09:52:07,737 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-24 09:52:07,742 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 09:52:07,742 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 09:52:08,308 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 09:52:08,439 - Setup: schema.py - ERROR: (psycopg2.OperationalError) connection to server at "127.0.0.1", port 5432 failed: FATAL:  password authentication failed for user "postgres"

(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3302, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 712, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 674, in __init__
    self.__connect()
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 900, in __connect
    with util.safe_reraise():
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 643, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 621, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
psycopg2.OperationalError: connection to server at "127.0.0.1", port 5432 failed: FATAL:  password authentication failed for user "postgres"


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/schema.py", line 19, in <module>
    Base.prepare(autoload_with=engine,
  File "<string>", line 2, in prepare
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/util/deprecations.py", line 281, in warned
    return fn(*args, **kwargs)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/ext/automap.py", line 1255, in prepare
    cls.metadata.reflect(autoload_with, **opts)  # type: ignore[arg-type]  # noqa: E501
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5761, in reflect
    with inspection.inspect(bind)._inspection_context() as insp:
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/inspection.py", line 140, in inspect
    ret = reg(subject)
          ^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/reflection.py", line 312, in _engine_insp
    return Inspector._construct(Inspector._init_engine, bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/reflection.py", line 245, in _construct
    init(self, bind)
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/reflection.py", line 256, in _init_engine
    engine.connect().close()
    ^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3278, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 148, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2442, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3302, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 712, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 674, in __init__
    self.__connect()
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 900, in __connect
    with util.safe_reraise():
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 643, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 621, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/.venv/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "127.0.0.1", port 5432 failed: FATAL:  password authentication failed for user "postgres"

(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-10-24 09:52:34,034 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 09:52:35,613 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 09:52:35,614 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 09:52:35,614 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 09:52:35,615 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 09:52:35,615 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 09:52:35,667 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 09:52:35,781 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 09:52:35,781 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 09:52:35,782 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 09:52:35,783 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 09:52:35,784 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 09:52:42,821 -  - INFO: Building summary query
2024-10-24 09:53:02,114 -  - INFO: Building summary query
2024-10-24 09:53:02,116 -  - INFO: Building MATCH conditions
2024-10-24 10:01:44,444 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-24 10:01:44,445 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:01:44,445 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:01:44,504 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:01:45,919 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:01:45,920 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:01:45,921 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:01:45,922 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:01:45,923 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:01:45,957 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:01:46,090 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:01:46,091 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:01:46,091 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:01:46,092 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:01:46,093 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:02:00,037 -  - INFO: Building summary query
2024-10-24 10:02:00,038 -  - INFO: Building MATCH conditions
2024-10-24 10:03:33,495 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-24 10:03:33,495 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:03:33,495 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:03:33,552 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:03:34,927 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:03:34,928 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:03:34,943 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:03:34,943 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:03:34,944 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:03:34,944 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:03:34,944 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:03:34,955 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:03:35,051 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:03:35,051 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:03:35,051 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:03:35,051 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:03:35,052 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:03:35,088 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:03:36,501 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:03:36,501 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:03:36,502 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:03:36,502 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:03:36,502 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:03:36,514 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:03:36,608 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:03:36,608 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:03:36,609 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:03:36,609 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:03:36,609 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:03:54,640 - Query: 2e9394c3-db6d-484f-aaf2-1bd3846dbb99 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=61616)
2024-10-24 10:03:54,640 - Query: 2e9394c3-db6d-484f-aaf2-1bd3846dbb99 - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-24 10:03:54,640 - Query: 2e9394c3-db6d-484f-aaf2-1bd3846dbb99 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-24 10:03:54,640 - Query: 2e9394c3-db6d-484f-aaf2-1bd3846dbb99 - INFO: Building summary query
2024-10-24 10:03:54,641 - Query: 2e9394c3-db6d-484f-aaf2-1bd3846dbb99 - INFO: Building MATCH conditions
2024-10-24 10:03:54,644 - Query: 2e9394c3-db6d-484f-aaf2-1bd3846dbb99 - ERROR: data_source_counts() missing 1 required positional argument: 'data_source_columns'
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 160, in summary_query
    data_source_count_select = data_source_counts(db, data_source_columns)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: data_source_counts() missing 1 required positional argument: 'data_source_columns'
2024-10-24 10:04:01,552 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:04:01,552 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:04:01,570 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-24 10:04:01,570 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:04:01,571 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:04:01,606 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:04:01,627 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:04:03,014 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:04:03,014 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:04:03,014 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:04:03,015 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:04:03,015 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:04:03,029 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:04:03,029 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:04:03,029 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:04:03,030 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:04:03,030 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:04:03,030 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:04:03,044 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:04:03,125 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:04:03,125 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:04:03,125 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:04:03,125 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:04:03,126 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:04:03,138 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:04:03,139 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:04:03,139 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:04:03,139 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:04:03,139 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:04:05,961 - Query: 458e9315-098c-4a88-9da3-6aa167efbdcd - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=61626)
2024-10-24 10:04:05,961 - Query: 458e9315-098c-4a88-9da3-6aa167efbdcd - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-24 10:04:05,962 - Query: 458e9315-098c-4a88-9da3-6aa167efbdcd - INFO: http://127.0.0.1:8000/summary/subject
2024-10-24 10:04:05,962 - Query: 458e9315-098c-4a88-9da3-6aa167efbdcd - INFO: Building summary query
2024-10-24 10:04:05,962 - Query: 458e9315-098c-4a88-9da3-6aa167efbdcd - INFO: Building MATCH conditions
2024-10-24 10:04:05,966 - Query: 458e9315-098c-4a88-9da3-6aa167efbdcd - ERROR: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/tanner.coon/cda/cda-api/cda_api/routers/summary.py", line 41, in subject_summary_endpoint
    result = summary_query(db, endpoint_tablename='subject', qnode=qnode, log=log)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tanner.coon/cda/cda-api/cda_api/db/query_builders.py", line 164, in summary_query
    for columnname in qnode.ADD_COLUMNS:
TypeError: 'NoneType' object is not iterable
2024-10-24 10:04:59,194 - Setup: connection.py - INFO: Reading environment variables from .env
2024-10-24 10:04:59,195 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:04:59,195 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:04:59,241 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:04:59,241 - Setup: connection.py - INFO: Creating database connection url from environment variables found in config/.env
2024-10-24 10:04:59,241 - Setup: connection.py - INFO: Creating database engine and session objects
2024-10-24 10:04:59,300 - Setup: schema.py - INFO: Building SQLAlchemy automap
2024-10-24 10:05:00,676 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:05:00,676 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:05:00,677 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:05:00,677 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:05:00,677 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:05:00,704 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:05:00,714 - Setup: schema.py - INFO: Successfully built SQLAlchemy automap
2024-10-24 10:05:00,715 - Setup: schema.py - INFO: Adding relationships to file table
2024-10-24 10:05:00,715 - Setup: schema.py - INFO: Adding relationships to project table
2024-10-24 10:05:00,715 - Setup: schema.py - INFO: Successfully added relationships to file and project tables
2024-10-24 10:05:00,715 - Setup: schema.py - INFO: Successfully added relationships for dicom_series to its secondary tables
2024-10-24 10:05:00,768 - Setup: DatabaseMap.py - INFO: Building column_metadata map
2024-10-24 10:05:00,799 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:05:00,799 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:05:00,799 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:05:00,799 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:05:00,800 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:05:00,862 - Setup: DatabaseMap.py - INFO: Building DatabaseMap Object
2024-10-24 10:05:00,862 - Setup: DatabaseMap.py - INFO: Building metadata variables from automapped Base
2024-10-24 10:05:00,862 - Setup: DatabaseMap.py - INFO: Building entity class variables from automapped Base
2024-10-24 10:05:00,862 - Setup: DatabaseMap.py - INFO: Building column map
2024-10-24 10:05:00,863 - Setup: DatabaseMap.py - INFO: Building relationship map
2024-10-24 10:05:02,953 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=61640)
2024-10-24 10:05:02,953 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": None, "EXCLUDE_COLUMNS": None}
2024-10-24 10:05:02,953 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-24 10:05:02,953 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: Building summary query
2024-10-24 10:05:02,953 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: Building MATCH conditions
2024-10-24 10:05:10,959 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: Query execution time: 7.988054990768433s
2024-10-24 10:05:10,979 - Query: a61c1254-2710-481c-97ad-42ee3671f025 - INFO: Success
2024-10-24 10:05:47,187 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: summary/subject endpoint hit: Address(host='127.0.0.1', port=61652)
2024-10-24 10:05:47,187 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: QNode: {"MATCH_ALL": ["sex like m%"], "MATCH_SOME": None, "ADD_COLUMNS": ["sex"], "EXCLUDE_COLUMNS": None}
2024-10-24 10:05:47,187 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: http://127.0.0.1:8000/summary/subject
2024-10-24 10:05:47,187 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: Building summary query
2024-10-24 10:05:47,188 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: Building MATCH conditions
2024-10-24 10:05:49,882 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: Query execution time: 2.6751928329467773s
2024-10-24 10:05:49,902 - Query: 717b2136-5f97-4dac-b36d-9de9a2c6cd07 - INFO: Success
